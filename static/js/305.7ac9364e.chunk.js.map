{"version":3,"file":"static/js/305.7ac9364e.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from '../../redux/contactsApi';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react';\n\nexport function ContactForm() {\n  const [addCcontact] = useAddContactMutation();\n  const { data } = useGetContactsQuery();\n  const [errors, setIerrors] = useState({\n    name: false,\n    number: false,\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const newName = form.elements.name.value;\n    const newNumber = form.elements.number.value;\n\n    const newContact = {\n      name: newName,\n      phone: newNumber,\n    };\n\n    if (\n      data.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      window.alert(`${newContact.name} is already in contacts`);\n    } else if (\n      newContact.name.trim() === '' ||\n      newContact.phone.trim() === ''\n    ) {\n      window.alert(`is already in contacts`);\n    } else {\n      addCcontact(newContact);\n    }\n\n    form.reset();\n  };\n\n  const handleChange = e => {\n    const value = e.target.value;\n    const field = e.target.name;\n    if (field === 'name') {\n      setIerrors(previousState => {\n        return { ...previousState, name: false };\n      });\n\n      const reg = new RegExp(\n        \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      ).test(value);\n\n      if (!reg) {\n        setIerrors(previousState => {\n          return {\n            ...previousState,\n            name: true,\n          };\n        });\n      }\n    } else if (field === 'number') {\n      setIerrors(previousState => {\n        return { ...previousState, number: false };\n      });\n\n      const reg = new RegExp(\n        /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/\n      ).test(value);\n\n      if (!reg) {\n        setIerrors(previousState => {\n          return {\n            ...previousState,\n            number: true,\n          };\n        });\n      }\n    }\n  };\n\n  const formId = nanoid();\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          '& > :not(style)': { m: 1, width: '100%' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n        htmlFor={formId}\n      >\n        <TextField\n          required\n          error={Boolean(errors?.name)}\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          name=\"name\"\n          // helperText={errors?.name}\n        />\n        <TextField\n          required\n          error={Boolean(errors?.number)}\n          id=\"outlined-basic\"\n          label=\"Number\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          name=\"number\"\n          // helperText={errors?.number}\n        />\n\n        <Stack spacing={2}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={Boolean(errors?.name) || Boolean(errors?.number)}\n          >\n            Add contact\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n","import { useDeleteContactMutation } from '../../redux/contactsApi';\nimport PropTypes from 'prop-types';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\n\nexport const ContactListItem = ({ contact }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const handleDelete = id => {\n    deleteContact(id);\n  };\n\n  return (\n    <ListItem disablePadding key={contact.id}>\n      <ListItemButton>\n        <ListItemText primary={`${contact.name}: ${contact.phone}`} />\n        <Stack spacing={2}>\n          <Button\n            variant=\"contained\"\n            type=\"button\"\n            onClick={() => handleDelete(contact.id)}\n          >\n            Delete\n          </Button>\n        </Stack>\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object,\n};\n","import { useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { useGetContactsQuery } from '../../redux/contactsApi';\n\nexport function ContactList() {\n  const filter = useSelector(state => state.filter.filter);\n  const { data } = useGetContactsQuery();\n\n  const filterContact = () => {\n    try {\n      return data.filter(contact => {\n        return contact.name.toLowerCase().includes(filter);\n      });\n    } catch {\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <Box sx={{ width: '100%', bgcolor: 'background.paper' }}>\n        <nav aria-label=\"main mailbox folders\">\n          <List>\n            {filterContact() &&\n              filterContact().map(contact => (\n                <ContactListItem key={contact.id} contact={contact} />\n              ))}\n          </List>\n        </nav>\n      </Box>\n    </>\n  );\n}\n","import { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/phoneBookSlice';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '100%' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"text\"\n        onChange={handleChange}\n      />\n    </Box>\n  );\n}\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n\nexport const ContactsPage = () => {\n  return (\n    <>\n      <Box sx={{ width: '100%', padding: '20px' }}>\n        <Grid container columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n          <Grid item xs=\"auto\">\n            <p>Phonebook</p>\n            <ContactForm />\n          </Grid>\n          <Grid item xs=\"auto\">\n            <p>Contacts</p>\n            <Filter />\n            <ContactList />\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n"],"names":["ContactForm","useAddContactMutation","addCcontact","data","useGetContactsQuery","useState","name","number","errors","setIerrors","handleChange","e","value","target","field","previousState","RegExp","test","formId","nanoid","Box","component","sx","m","width","noValidate","autoComplete","onSubmit","preventDefault","form","currentTarget","newContact","elements","phone","find","contact","toLowerCase","window","alert","trim","reset","htmlFor","TextField","required","error","Boolean","id","label","variant","onChange","Stack","spacing","Button","type","disabled","ContactListItem","useDeleteContactMutation","deleteContact","ListItem","disablePadding","ListItemButton","ListItemText","primary","onClick","ContactList","filter","useSelector","state","filterContact","includes","bgcolor","List","map","Filter","dispatch","useDispatch","setFilter","ContactsPage","padding","Grid","container","columnSpacing","xs","sm","md","item"],"sourceRoot":""}